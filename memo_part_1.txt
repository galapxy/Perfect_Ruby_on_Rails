bundler：どのgemファイルの、どのバージョンを使っているのか、を明示する。
Gemfileにその情報を記述する。 まとめて管理してくれるgem
ほかのgemはbundler経由で実行したりインストールしたりするのが基本

gem自体はインストール済みでも、Gemfileに記述した後あらためて
「bundle install」
を実行。  -> Gemfileに記述されたgemのインストール。Gemfile.lockが生成され、バージョン情報などが記録される。

・CoC（Convention over Configuration）
 -> 設定より規約。ファイル名やファイルの保管場所が決められているため、設定する必要がなく、共通のルールで開発できる。
・DRY（Don't Repeat Yourself）
 -> 繰り返さない
・REST（Representational State Transfer）
 -> 「全てのリソースに一意となる識別子（URI）がある」「URIを通してリソースを操作する手段を提供する」
・自動テスト
 -> 自動テストを重要視

「$ rails new アプリ名」
で、railsにのっとったアプリを作成する

bundle exec rails としていたものを、./bin/rails で実行できるようになる。<- ver.4の仕様？

POST   /tasks(.:format)          tasks#create
 -> Postメソッドで/tasksへリクエストを送ると、tasksコントローラーのcreateアクションが実行される

routesの resources :tasks
 -> resourcesメソッドに:tasksを渡すと、おきまりのCRUD操作用ルーティングを設定してくれる


「アクションの中でモデルを通してデータを取得し」
 -> そうか、アクションっていうのはそういう役割なんだ。

あるシステムに登場するモノやコト　<- 名前をつけたり、関係を整理したりすることを「モデリング」
MVCのModelとは、このモデリングのモデルのこと
book_adminの場合
・本
・出版社
・作者
・アプリのユーザー

本というモデルには
・書名
・発売日
・価格
・ページ数
・出版社
・作者/著者

・references複数形。単数形と間違えると、どうにもならなくなる。

・has_many/belongs_to　の関連づけをすると、互いのモデルに、相手のモデルの複数形名のメソッドが定義される
　-> 関連づけされたカラムの情報を引き出したり、関連を追加したりできる